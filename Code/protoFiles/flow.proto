//copyright 2013 Computer Science Department, Recursive InterNetworking Architecture (RINA) laboratory, Boston University.
//All rights reserved. Permission to use, copy, modify, and distribute this software and its documentation for any purpose 
//and without fee is hereby granted, provided that the above copyright notice appear in all copies and that both the 
//copyright notice and this permission notice appear in supporting documentation. The RINA laboratory of the Computer 
//Science Department at Boston University makes no representations about the suitability of this software for any purpose.
//It is provided "as is" without express or implied warranty.

package rina.messages;
import "ApplicationProcessNamingInfoMessage.proto";
import "QoSSpecification.proto";
import "PropertyMessage.proto";

message connectionId_t {  //information to identify a connection
	optional uint32 qosId = 1; 				//identifies the QoS cube under which this flow is classified
	optional uint32 sourceCEPId = 2; 		//identifies the source connection endpoint (unique within the source IPC process)
	optional uint32 destinationCEPId = 3; 	//identifies the destination connection endpoint (unique within the destination IPC process)
}

message flow_t{  //Contains the information to setup a new flow
	required rina.messages.applicationProcessNamingInfo_t sourceNamingInfo = 1;  			//The naming information of the source application process
	required rina.messages.applicationProcessNamingInfo_t destinationNamingInfo = 2; 		//The naming information of the destination application process
	required uint64 sourcePortId = 3; 										//The port id allocated to this flow by the source IPC process
	optional uint64 destinationPortId = 4; 									//The port id allocated to this flow by the destination IPC process
	required uint64 sourceAddress = 5; 										//The address of the source IPC process for this flow
	optional uint64 destinationAddress = 6; 									//The address of the destination IPC process for this flow
	repeated connectionId_t connectionIds = 7; 								//The identifiers of all the connections associated to this flow
	optional uint32 currentConnectionIdIndex = 8;								//Identifies the index of the current active connection in the flow
	optional uint32 state = 9; 												//
	optional rina.messages.qosSpecification_t qosParameters = 10; 			//the QoS parameters specified by the application process that requested this flow
	repeated property_t policies = 11; 											//the set of policies selected by the IPC process
	repeated property_t policyParemeters = 12; 								//the set of parameters associated to the policies
	optional bytes accessControl = 13; 										// ?
	optional uint32 maxCreateFlowRetries = 14; 								//Maximum number of retries to create the flow before giving up
	optional uint32 createFlowRetries = 15; 								//The current number of retries
	optional uint32 hopCount = 16; 									//While the search rules that generate the forwarding table should allow for a natural termination condition, it seems wise to have the means to enforce termination
}