/**
 * @copyright 2013 Computer Science Department, Recursive InterNetworking Architecture (RINA) laboratory, Boston University. 
 * All rights reserved. Permission to use, copy, modify, and distribute this software and its documentation
 * for any purpose and without fee is hereby granted, provided that the above copyright notice appear in all 
 * copies and that both the copyright notice and this permission notice appear in supporting documentation. 
 * The RINA laboratory of the Computer Science Department at Boston University makes no 
 * representations about the suitability of this software for any purpose. 
 * It is provided "as is" without express or implied warranty. 
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flows.proto

package rina.object.gpb;

public final class Flows_t {
  private Flows_t() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface flows_tOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .rina.messages.flow_t flow = 1;
    java.util.List<rina.object.gpb.Flow_t.flow_t> 
        getFlowList();
    rina.object.gpb.Flow_t.flow_t getFlow(int index);
    int getFlowCount();
    java.util.List<? extends rina.object.gpb.Flow_t.flow_tOrBuilder> 
        getFlowOrBuilderList();
    rina.object.gpb.Flow_t.flow_tOrBuilder getFlowOrBuilder(
        int index);
  }
  public static final class flows_t extends
      com.google.protobuf.GeneratedMessage
      implements flows_tOrBuilder {
    // Use flows_t.newBuilder() to construct.
    private flows_t(Builder builder) {
      super(builder);
    }
    private flows_t(boolean noInit) {}
    
    private static final flows_t defaultInstance;
    public static flows_t getDefaultInstance() {
      return defaultInstance;
    }
    
    public flows_t getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rina.object.gpb.Flows_t.internal_static_rina_messages_flows_t_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rina.object.gpb.Flows_t.internal_static_rina_messages_flows_t_fieldAccessorTable;
    }
    
    // repeated .rina.messages.flow_t flow = 1;
    public static final int FLOW_FIELD_NUMBER = 1;
    private java.util.List<rina.object.gpb.Flow_t.flow_t> flow_;
    public java.util.List<rina.object.gpb.Flow_t.flow_t> getFlowList() {
      return flow_;
    }
    public java.util.List<? extends rina.object.gpb.Flow_t.flow_tOrBuilder> 
        getFlowOrBuilderList() {
      return flow_;
    }
    public int getFlowCount() {
      return flow_.size();
    }
    public rina.object.gpb.Flow_t.flow_t getFlow(int index) {
      return flow_.get(index);
    }
    public rina.object.gpb.Flow_t.flow_tOrBuilder getFlowOrBuilder(
        int index) {
      return flow_.get(index);
    }
    
    private void initFields() {
      flow_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      for (int i = 0; i < getFlowCount(); i++) {
        if (!getFlow(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < flow_.size(); i++) {
        output.writeMessage(1, flow_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < flow_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, flow_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static rina.object.gpb.Flows_t.flows_t parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rina.object.gpb.Flows_t.flows_t parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rina.object.gpb.Flows_t.flows_t parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rina.object.gpb.Flows_t.flows_t parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rina.object.gpb.Flows_t.flows_t parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rina.object.gpb.Flows_t.flows_t parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static rina.object.gpb.Flows_t.flows_t parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rina.object.gpb.Flows_t.flows_t parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rina.object.gpb.Flows_t.flows_t parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rina.object.gpb.Flows_t.flows_t parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rina.object.gpb.Flows_t.flows_t prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements rina.object.gpb.Flows_t.flows_tOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return rina.object.gpb.Flows_t.internal_static_rina_messages_flows_t_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return rina.object.gpb.Flows_t.internal_static_rina_messages_flows_t_fieldAccessorTable;
      }
      
      // Construct using rina.messages.Flows.flows_t.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFlowFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (flowBuilder_ == null) {
          flow_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          flowBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rina.object.gpb.Flows_t.flows_t.getDescriptor();
      }
      
      public rina.object.gpb.Flows_t.flows_t getDefaultInstanceForType() {
        return rina.object.gpb.Flows_t.flows_t.getDefaultInstance();
      }
      
      public rina.object.gpb.Flows_t.flows_t build() {
        rina.object.gpb.Flows_t.flows_t result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private rina.object.gpb.Flows_t.flows_t buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        rina.object.gpb.Flows_t.flows_t result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public rina.object.gpb.Flows_t.flows_t buildPartial() {
        rina.object.gpb.Flows_t.flows_t result = new rina.object.gpb.Flows_t.flows_t(this);
        int from_bitField0_ = bitField0_;
        if (flowBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            flow_ = java.util.Collections.unmodifiableList(flow_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.flow_ = flow_;
        } else {
          result.flow_ = flowBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rina.object.gpb.Flows_t.flows_t) {
          return mergeFrom((rina.object.gpb.Flows_t.flows_t)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(rina.object.gpb.Flows_t.flows_t other) {
        if (other == rina.object.gpb.Flows_t.flows_t.getDefaultInstance()) return this;
        if (flowBuilder_ == null) {
          if (!other.flow_.isEmpty()) {
            if (flow_.isEmpty()) {
              flow_ = other.flow_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFlowIsMutable();
              flow_.addAll(other.flow_);
            }
            onChanged();
          }
        } else {
          if (!other.flow_.isEmpty()) {
            if (flowBuilder_.isEmpty()) {
              flowBuilder_.dispose();
              flowBuilder_ = null;
              flow_ = other.flow_;
              bitField0_ = (bitField0_ & ~0x00000001);
              flowBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFlowFieldBuilder() : null;
            } else {
              flowBuilder_.addAllMessages(other.flow_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        for (int i = 0; i < getFlowCount(); i++) {
          if (!getFlow(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              rina.object.gpb.Flow_t.flow_t.Builder subBuilder = rina.object.gpb.Flow_t.flow_t.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addFlow(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .rina.messages.flow_t flow = 1;
      private java.util.List<rina.object.gpb.Flow_t.flow_t> flow_ =
        java.util.Collections.emptyList();
      private void ensureFlowIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          flow_ = new java.util.ArrayList<rina.object.gpb.Flow_t.flow_t>(flow_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          rina.object.gpb.Flow_t.flow_t, rina.object.gpb.Flow_t.flow_t.Builder, rina.object.gpb.Flow_t.flow_tOrBuilder> flowBuilder_;
      
      public java.util.List<rina.object.gpb.Flow_t.flow_t> getFlowList() {
        if (flowBuilder_ == null) {
          return java.util.Collections.unmodifiableList(flow_);
        } else {
          return flowBuilder_.getMessageList();
        }
      }
      public int getFlowCount() {
        if (flowBuilder_ == null) {
          return flow_.size();
        } else {
          return flowBuilder_.getCount();
        }
      }
      public rina.object.gpb.Flow_t.flow_t getFlow(int index) {
        if (flowBuilder_ == null) {
          return flow_.get(index);
        } else {
          return flowBuilder_.getMessage(index);
        }
      }
      public Builder setFlow(
          int index, rina.object.gpb.Flow_t.flow_t value) {
        if (flowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlowIsMutable();
          flow_.set(index, value);
          onChanged();
        } else {
          flowBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setFlow(
          int index, rina.object.gpb.Flow_t.flow_t.Builder builderForValue) {
        if (flowBuilder_ == null) {
          ensureFlowIsMutable();
          flow_.set(index, builderForValue.build());
          onChanged();
        } else {
          flowBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addFlow(rina.object.gpb.Flow_t.flow_t value) {
        if (flowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlowIsMutable();
          flow_.add(value);
          onChanged();
        } else {
          flowBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addFlow(
          int index, rina.object.gpb.Flow_t.flow_t value) {
        if (flowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFlowIsMutable();
          flow_.add(index, value);
          onChanged();
        } else {
          flowBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addFlow(
          rina.object.gpb.Flow_t.flow_t.Builder builderForValue) {
        if (flowBuilder_ == null) {
          ensureFlowIsMutable();
          flow_.add(builderForValue.build());
          onChanged();
        } else {
          flowBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addFlow(
          int index, rina.object.gpb.Flow_t.flow_t.Builder builderForValue) {
        if (flowBuilder_ == null) {
          ensureFlowIsMutable();
          flow_.add(index, builderForValue.build());
          onChanged();
        } else {
          flowBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllFlow(
          java.lang.Iterable<? extends rina.object.gpb.Flow_t.flow_t> values) {
        if (flowBuilder_ == null) {
          ensureFlowIsMutable();
          super.addAll(values, flow_);
          onChanged();
        } else {
          flowBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearFlow() {
        if (flowBuilder_ == null) {
          flow_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          flowBuilder_.clear();
        }
        return this;
      }
      public Builder removeFlow(int index) {
        if (flowBuilder_ == null) {
          ensureFlowIsMutable();
          flow_.remove(index);
          onChanged();
        } else {
          flowBuilder_.remove(index);
        }
        return this;
      }
      public rina.object.gpb.Flow_t.flow_t.Builder getFlowBuilder(
          int index) {
        return getFlowFieldBuilder().getBuilder(index);
      }
      public rina.object.gpb.Flow_t.flow_tOrBuilder getFlowOrBuilder(
          int index) {
        if (flowBuilder_ == null) {
          return flow_.get(index);  } else {
          return flowBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends rina.object.gpb.Flow_t.flow_tOrBuilder> 
           getFlowOrBuilderList() {
        if (flowBuilder_ != null) {
          return flowBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(flow_);
        }
      }
      public rina.object.gpb.Flow_t.flow_t.Builder addFlowBuilder() {
        return getFlowFieldBuilder().addBuilder(
            rina.object.gpb.Flow_t.flow_t.getDefaultInstance());
      }
      public rina.object.gpb.Flow_t.flow_t.Builder addFlowBuilder(
          int index) {
        return getFlowFieldBuilder().addBuilder(
            index, rina.object.gpb.Flow_t.flow_t.getDefaultInstance());
      }
      public java.util.List<rina.object.gpb.Flow_t.flow_t.Builder> 
           getFlowBuilderList() {
        return getFlowFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          rina.object.gpb.Flow_t.flow_t, rina.object.gpb.Flow_t.flow_t.Builder, rina.object.gpb.Flow_t.flow_tOrBuilder> 
          getFlowFieldBuilder() {
        if (flowBuilder_ == null) {
          flowBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              rina.object.gpb.Flow_t.flow_t, rina.object.gpb.Flow_t.flow_t.Builder, rina.object.gpb.Flow_t.flow_tOrBuilder>(
                  flow_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          flow_ = null;
        }
        return flowBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:rina.messages.flows_t)
    }
    
    static {
      defaultInstance = new flows_t(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:rina.messages.flows_t)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rina_messages_flows_t_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rina_messages_flows_t_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013flows.proto\022\rrina.messages\032\nflow.proto" +
      "\".\n\007flows_t\022#\n\004flow\030\001 \003(\0132\025.rina.message" +
      "s.flow_t"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_rina_messages_flows_t_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_rina_messages_flows_t_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rina_messages_flows_t_descriptor,
              new java.lang.String[] { "Flow", },
              rina.object.gpb.Flows_t.flows_t.class,
              rina.object.gpb.Flows_t.flows_t.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          rina.object.gpb.Flow_t.getDescriptor(),
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
